{"ast":null,"code":"// import {gql} from 'apollo-server-lambda';\n// const { ApolloServer } = require('apollo-server-lambda');\n// const {typeDefs} = require('./graphql/typeDefs');\n// const {resolvers} = require('./graphql/resolvers');\n// import { resolvers } from './graphql/resolvers';\n// const server = new ApolloServer({\n//   typeDefs,\n//   resolvers,\n//   // context: ({ req, res }) => ({ req, res }),\n//   playground: {\n//     endpoint: \"/dev/graphql\",\n//   },\n// });\n// exports.graphqlHandler = server.createHandler({\n//   cors: {\n//     origin: '*',\n//     credentials: true,\n//   },\n//   endpointURL: '/graphql',\n// });\n// !UNCOMMENT TO USE LOCAL SERVER FOR TESTING. If switching to AWS, remember to change the URI string at the bottom in the \"lib/withApollo\" file\nconst {\n  ApolloServer\n} = require('apollo-server');\n\nimport { typeDefs } from './graphql/typeDefs';\nimport { resolvers } from './graphql/resolvers';\n\nrequire('./config');\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nserver.listen().then(({\n  url\n}) => {\n  console.log(`🐬 listening @ ${url}`);\n});","map":null,"metadata":{},"sourceType":"module"}